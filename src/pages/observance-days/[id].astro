---
import Social from "../../components/Social.astro";
import Layout from "../../layouts/Layout.astro";
import { april } from "../../observanceDaysData/april";
import { august } from "../../observanceDaysData/august";
import { december } from "../../observanceDaysData/december";
import { february } from "../../observanceDaysData/february";
import { january } from "../../observanceDaysData/january";
import { july } from "../../observanceDaysData/july";
import { june } from "../../observanceDaysData/june";
import { march } from "../../observanceDaysData/march";
import { may } from "../../observanceDaysData/may";
import { november } from "../../observanceDaysData/november";
import { october } from "../../observanceDaysData/october";
import { september } from "../../observanceDaysData/september";

export function getStaticPaths() {
  const datas = [
    january,
    february,
    march,
    april,
    may,
    june,
    july,
    august,
    september,
    october,
    november,
    december,
  ];

  const mergedData = datas.flat();

  const paths = mergedData.map((data) => {
    let dayId = data.day.trim().toLowerCase().split(" ").join("-");
    let dateId = data.date.split(" ").join("-").toLowerCase();
    return {
      params: {
        id: `${dayId}-${dateId}`,
      },
    };
  });
  return [...paths];
}

const { id } = Astro.params;

const datas = [
  january,
  february,
  march,
  april,
  may,
  june,
  july,
  august,
  september,
  october,
  november,
  december,
];

const mergedData = datas.flat();

const pageDataArray = mergedData
  .map((data) => {
    let dayId = data.day.trim().toLowerCase().split(" ").join("-");
    let dateId = data.date.split(" ").join("-").toLowerCase();
    if (id === `${dayId}-${dateId}`) {
      return { ...data, dayId };
    }
  })
  .filter(Boolean);

const pageData = pageDataArray[0];

// next item
const nextItem = mergedData
  .map((data, index) => {
    let dayId = data.day.trim().toLowerCase().split(" ").join("-");
    let dateId = data.date.split(" ").join("-").toLowerCase();
    if (id === `${dayId}-${dateId}`) {
      if (index === mergedData.length - 1) {
        return {day: mergedData[0].day, dayId: `${mergedData[0].day.trim().toLowerCase().split(" ").join("-")}-${mergedData[0].date.split(" ").join("-").toLowerCase()}`};
      }

      let nextDayId = mergedData[index + 1].day.trim().toLowerCase().split(" ").join("-");
      let nextDateId = mergedData[index + 1].date.split(" ").join("-").toLowerCase();
      return {day: mergedData[index + 1].day, dayId: `${nextDayId}-${nextDateId}`};
    }
  })
  .filter(Boolean);

let createdImagePath = pageData?.day.trim().toLowerCase().split(" ").join("-");
let completeCreatedImagePath = `../../../public/days/${createdImagePath}.png`;

import type { ImageMetadata } from "astro";
const daysImages = import.meta.glob<{ default: ImageMetadata }>(
  "../../../public/days/*.png"
);
---

<Layout
  title=`${pageData?.day}`
  description=`${pageData?.description}`
  activePage="calendar"
  ogImage={daysImages[completeCreatedImagePath] ? `https://www.kroenger.org/days/${createdImagePath}.png` : `https://www.kroenger.org/days/default.png`}
>
  <div class="p-4 lg:ml-24 sm:mb-16 lg:mb-0">
    <article>
      <div
        class="flex pt-12 px-6 md:px-20 items-center justify-center bg-hero md:h-screen overflow-hidden"
      >
        <div class="flex flex-col gap-6 md:flex-row items-center max-w-8xl">
          <div class="w-full md:w-1/2 lg:pr-32">
            <div class="flex items-center justify-center md:justify-start my-4">
              <span
                class="bg-[#a1d783] py-1 px-2 rounded-lg text-md font-bold text-secondary"
                >{pageData?.date}</span
              >
            </div>
            <h1
              class="text-4xl lg:text-5xl text-center md:text-left text-secondary leading-tight font-bold"
            >
              {pageData?.day}
            </h1>
            <h3
              class="mt-6 md:mt-10 text-md lg:text-xl text-center md:text-left text-gray-700 font-light tracking-wider leading-relaxed"
            >
              {pageData?.description}
            </h3>
            <div class="flex my-4">
              {
                pageData?.links.map((link) => (
                  <a
                    href=`${link.value}?ref=kroenger.org`
                    target="_blank"
                    class="bg-green-100 text-green-800 text-sm font-medium me-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-green-400 border border-green-400"
                    >{link.label}</a
                  >
                ))
              }
            </div>
          </div>
          <div class="w-full md:w-1/2 flex flex-col justify-center md:justify-end">
            <a
              href={daysImages[completeCreatedImagePath]
                ? `../../days/${createdImagePath}.png`
                : "../../days/default.png"}
              target="_blank"
            >
              <img
                src={daysImages[completeCreatedImagePath]
                  ? `../../days/${createdImagePath}.png`
                  : "../../days/default.png"}
                alt={pageData?.day}
              />
            </a>
            {
              daysImages[completeCreatedImagePath] && 
            <span class="text-muted text-sm text-right mt-4">
              Poster generated using <a
                href="https://www.test-free.online/kroenger-poster-generator/"
                class="text-violet-500 hover:text-violet-800 font-bold"
                target="_blank">Kroenger Poster Generator</a>
            </span>
              }
          </div>
        </div>
      </div>
      <div class="flex justify-end mt-12">
          <a href={`../../observance-days/${nextItem[0]?.dayId}`}>
              <button
                type="button"
                class="text-secondary bg-primary hover:bg-secondary hover:text-primary font-bold p-4 rounded-2xl text-xl flex items-center gap-2"
                >
                <span>{nextItem[0]?.day}</span>
                <svg class="w-8 h-8" viewBox="0 -6.5 38 38" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                    xmlns:xlink="http://www.w3.org/1999/xlink" fill="currentColor" stroke="currentColor">
                      <g id="icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g transform="translate(-1511.000000, -158.000000)"
                              fill="currentColor" fill-rule="nonzero">
                              <g id="1" transform="translate(1350.000000, 120.000000)">
                                  <path
                                      d="M187.812138,38.5802109 L198.325224,49.0042713 L198.41312,49.0858421 C198.764883,49.4346574 198.96954,49.8946897 199,50.4382227 L198.998248,50.6209428 C198.97273,51.0514917 198.80819,51.4628128 198.48394,51.8313977 L198.36126,51.9580208 L187.812138,62.4197891 C187.031988,63.1934036 185.770571,63.1934036 184.990421,62.4197891 C184.205605,61.6415481 184.205605,60.3762573 184.990358,59.5980789 L192.274264,52.3739093 L162.99947,52.3746291 C161.897068,52.3746291 161,51.4850764 161,50.3835318 C161,49.2819872 161.897068,48.3924345 162.999445,48.3924345 L192.039203,48.3917152 L184.990421,41.4019837 C184.205605,40.6237427 184.205605,39.3584519 184.990421,38.5802109 C185.770571,37.8065964 187.031988,37.8065964 187.812138,38.5802109 Z"
                                      id="right-arrow"> </path>
                              </g>
                          </g>
                      </g>
                </svg>
                </button>
            </a>
        </div>
    </article>

    <div>
      <Social />
    </div>
  </div>
</Layout>
